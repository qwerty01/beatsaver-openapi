/*
 * BeatSaver API
 *
 * WIP  If you want to keep any kind of mirror instead of making 100s of requests instead consider subscribing to the websocket api. wss://ws.beatsaver.com/maps  Messages will be in the style {\"type\": \"MAP_UPDATE\", \"msg\": __MAP_DATA_HERE__}
 *
 * The version of the OpenAPI document: 0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserFollowData {
    #[serde(rename = "curation", skip_serializing_if = "Option::is_none")]
    pub curation: Option<bool>,
    #[serde(rename = "followers", skip_serializing_if = "Option::is_none")]
    pub followers: Option<i32>,
    #[serde(rename = "following", skip_serializing_if = "Option::is_none")]
    pub following: Option<bool>,
    #[serde(rename = "follows", skip_serializing_if = "Option::is_none")]
    pub follows: Option<i32>,
    #[serde(rename = "upload", skip_serializing_if = "Option::is_none")]
    pub upload: Option<bool>,
}

impl UserFollowData {
    pub fn new() -> UserFollowData {
        UserFollowData {
            curation: None,
            followers: None,
            following: None,
            follows: None,
            upload: None,
        }
    }
}
